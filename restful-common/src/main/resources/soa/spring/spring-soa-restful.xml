<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="  
		http://www.springframework.org/schema/beans  
		http://www.springframework.org/schema/beans/spring-beans-3.0.xsd  
		http://www.springframework.org/schema/mvc  
		http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd  
		http://www.springframework.org/schema/context  
		http://www.springframework.org/schema/context/spring-context-3.0.xsd">

	<context:component-scan base-package="com.ruoli.soa" />

	<mvc:interceptors>
		<!-- 多个拦截器,顺序执行
		 本类是restful调用的入口
		 -->
		<mvc:interceptor>
			<mvc:mapping path="/aps/rest/**" />
			<bean class="com.ruoli.soa.spring.interceptor.SoaRestAuthInterceptor" />
		</mvc:interceptor>
	</mvc:interceptors>

	<!--这里将数据库读写bean化后，对应的bean待用-->
	<bean id="soaHostAuthDao" class="com.ruoli.soa.spring.dao.SoaHostAuthDao">
		<constructor-arg index="0" value="${jdbc.driverClassName_rest}" />
		<constructor-arg index="1" value="${jdbc.url_rest}" />
		<constructor-arg index="2" value="${jdbc.username_rest}" />
		<constructor-arg index="3" value="${jdbc.password_rest}" />
	</bean>
</beans>