<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="         
          http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd         
          http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd         
          http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd         
          http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd         
          http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd"
	default-autowire="byName">

	<bean id="baseDs" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close" abstract="true">
		<property name="maxActive" value="${jdbc.maxActive_usr}" />
		<property name="initialSize" value="${jdbc.initialSize_usr}" />
		<property name="maxWait" value="${jdbc.maxWait_usr}" />
		<property name="minIdle" value="${jdbc.minIdle_usr}" />
		<property name="timeBetweenEvictionRunsMillis" value="${jdbc.timeBetweenEvictionRunsMillis_usr}" />
		<property name="minEvictableIdleTimeMillis" value="${jdbc.minEvictableIdleTimeMillis_usr}" />
		<property name="validationQuery" value="${jdbc.validationQuery_usr}" />
		<property name="testWhileIdle" value="${jdbc.testWhileIdle_usr}" />
		<property name="testOnBorrow" value="${jdbc.testOnBorrow_usr}" />
		<property name="testOnReturn" value="${jdbc.testOnReturn_usr}" />
		<property name="poolPreparedStatements" value="${jdbc.poolPreparedStatements_usr}" />
		<property name="maxPoolPreparedStatementPerConnectionSize" value="${jdbc.maxPoolPreparedStatementPerConnectionSize_usr}" />
		<property name="filters" value="${jdbc.filters_usr}" />
		<!--开启加密-->
		<property name="connectionProperties" value="config.decrypt=true" />
	</bean>

	<bean id="dataSource_aps" parent="baseDs">
		<property name="name"  value="db_usr"/>
		<property name="url" value="${jdbc.url_usr}" />
		<property name="username" value="${jdbc.username_usr}" />
		<property name="password" value="${jdbc.password_usr}" />
	</bean>

	<bean id="sqlSessionFactory_aps" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource_aps" />
		<!--<property name="mapperLocations" value="classpath*:mapper/user/*.xml" />-->
		<property name="mapperLocations">
			<array>
				<value>classpath*:mapper/user/*.xml</value>
				<value>classpath*:mapper/Field/*.xml</value>
			</array>
		</property>
	</bean>

	<bean id="mybatisConfigurer_aps" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory_aps"/>
		<property name="basePackage" value="com.roli.apsimock.dao" />
	</bean>

	<bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg index="0" ref="sqlSessionFactory_aps" />
	</bean>


</beans>  